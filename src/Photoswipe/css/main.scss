/*! PhotoSwipe main CSS by Dmitry Semenov | photoswipe.com | MIT license */

/*
	Styles for basic PhotoSwipe functionality (sliding area, open/close transitions)
*/

// PhotoSwipe uses Autoprefixer, so vendor prefixed are added automatically when needed.

@import "main-settings";


/* zvui = photoswipe */
.#{$base} {
	display: none;
	position:absolute;
	width: 100%;
	height: 100%;
	left:0;
	top:0;
	overflow: hidden;
	-ms-touch-action: none;
	touch-action: none;
	z-index: $zvui__root-z-index;
	-webkit-text-size-adjust: 100%;
	/* create separate layer, to avoid paint on window.onscroll in webkit/blink */
	-webkit-backface-visibility: hidden;
	outline: none;

	@if $zvui__box-sizing-border-box == true {
		* {
			box-sizing: border-box;
		}
	}

	img {
		max-width: none;
	}
}

/* style is added when JS option showHideOpacity is set to true */
.#{$base}--animate_opacity {
	/* 0.001, because opacity:0 doesn't trigger Paint action, which causes lag at start of transition */
	opacity: 0.001;
	will-change:opacity;
	/* for open/close transition */
	transition: opacity $zvui__show-hide-transition-duration cubic-bezier(.4,0,.22,1);
}

.#{$base}--open {
	display: block;
}

.#{$base}--zoom-allowed .#{$base}__img {
	/* autoprefixer: off */
	cursor: -webkit-zoom-in;
	cursor: -moz-zoom-in;
	cursor: zoom-in;
}

.#{$base}--zoomed-in .#{$base}__img {
	/* autoprefixer: off */
	cursor: -webkit-grab;
	cursor: -moz-grab;
	cursor: grab;
}

.#{$base}--dragging  .#{$base}__img {
	/* autoprefixer: off */
	cursor: -webkit-grabbing;
	cursor: -moz-grabbing;
	cursor: grabbing;
}

/*
	Background is added as a separate element.
	As animating opacity is much faster than animating rgba() background-color.
*/
.#{$base}__bg {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	background: $zvui__background-color;
	opacity: 0;
	transform: translateZ(0);
	-webkit-backface-visibility: hidden;
	will-change:opacity;
}

.#{$base}__scroll-wrap {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	overflow:hidden;
}

.#{$base}__container,
.#{$base}__zoom-wrap {
	-ms-touch-action: none;
	touch-action: none;
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
}

/* Prevent selection and tap highlights */
.#{$base}__container,
.#{$base}__img {
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	-webkit-tap-highlight-color: rgba(0,0,0,0);
	-webkit-touch-callout: none;
}

.#{$base}__zoom-wrap {
	position: absolute;
	width: 100%;
	-webkit-transform-origin: left top;
	-moz-transform-origin: left top;
	-ms-transform-origin: left top;
	transform-origin: left top;
	/* for open/close transition */
	// transition: transform $zvui__show-hide-transition-duration cubic-bezier(.4,0,.22,1);
}

.#{$base}__bg {
	will-change: opacity;
	/* for open/close transition */
	// transition: opacity $zvui__show-hide-transition-duration cubic-bezier(.4,0,.22,1);
}

.#{$base}--animated-in {
	.#{$base}__bg,
	.#{$base}__zoom-wrap {
		-webkit-transition: none;
		transition: none;
	}
}

.#{$base}__container,
.#{$base}__zoom-wrap {
	-webkit-backface-visibility: hidden;
}

.#{$base}__item {
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	overflow: hidden;
}

.#{$base}__img {
	position: absolute;
	width: auto;
	height: auto;
	top: 0;
	left: 0;
}

/*
	stretched thumbnail or div placeholder element (see below)
	style is added to avoid flickering in webkit/blink when layers overlap
*/
.#{$base}__img--placeholder {
	-webkit-backface-visibility: hidden;
}

/*
	div element that matches size of large image
	large image loads on top of it
*/
.#{$base}__img--placeholder--blank {
	background: $zvui__placeholder-color;
}

.#{$base}--ie .#{$base}__img {
	width: 100% !important;
	height: auto !important;
	left: 0;
	top: 0;
}

/*
	Error message appears when image is not loaded
	(JS option errorMsg controls markup)
*/
.#{$base}__error-msg {
	position: absolute;
	left: 0;
	top: 50%;
	width: 100%;
	text-align: center;
	font-size: 14px;
	line-height: 16px;
	margin-top: -8px;
	color: $zvui__error-text-color;
}

.#{$base}__error-msg a {
	color: $zvui__error-text-color;
	text-decoration: underline;
}
